{"version":3,"sources":["./src/app/authorization.guard.ts","./src/app/admin/admin-routing.module.ts","./src/app/services/alert.service.ts","./src/app/customer/catalog-page/catalog.page.ts","./src/app/customer/catalog-page/catalog.page.html","./src/app/auth/auth-routing.module.ts","./src/environments/environment.ts","./src/app/services/product.service.ts","./src/app/customer/role.guard.ts","./src/app/auth/auth.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/auth/sign-up-page/sign-up.page.ts","./src/app/auth/sign-up-page/sign-up.page.html","./src/app/customer/root-page/root.page.ts","./src/app/customer/root-page/root.page.html","./src/app/auth/auth.module.ts","./src/app/admin/role.guard.ts","./src/app/app.module.ts","./src/app/types/order-item.ts","./src/app/services/cart.service.ts","./src/app/customer/customer.module.ts","./src/app/admin/inventory-page/inventory.page.ts","./src/app/admin/inventory-page/inventory.page.html","./src/app/admin/admin.module.ts","./src/app/customer/customer-routing.module.ts","./src/app/services/auth.service.ts","./src/app/auth/sign-in-page/sign-in.page.ts","./src/app/auth/sign-in-page/sign-in.page.html","./src/app/services/user.service.ts","./src/app/admin/root-page/root.page.ts","./src/app/admin/root-page/root.page.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { AuthService } from './services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthorizationGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): UrlTree {\n    const user = this.authService.getLoggedInUser();\n    return (\n      user?.role === 'admin' && this.router.parseUrl('/admin') ||\n      user?.role === 'customer' && this.router.parseUrl('/customer') ||\n      this.router.parseUrl('/auth')\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { InventoryPage } from './inventory-page/inventory.page';\r\nimport { RoleGuard } from './role.guard';\r\nimport { RootPage } from './root-page/root.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'admin',\r\n    component: RootPage,\r\n    canActivate: [RoleGuard],\r\n    children: [\r\n      { path: '', pathMatch: 'full', redirectTo: 'all' },\r\n      { path: ':categoryId', component: InventoryPage },\r\n    ],\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertService {\r\n\r\n  public alert: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor() { }\r\n\r\n  postAlert(message: string): void {\r\n    this.alert.emit(message);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { IProduct } from 'src/app/types/product.interface';\r\n\r\n@Component({\r\n  templateUrl: './catalog.page.html',\r\n  styleUrls: ['./catalog.page.css']\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class CatalogPage implements OnInit {\r\n\r\n  public readonly allCategories$ = this.productService.getAllCategoriesRx();\r\n\r\n  public readonly allProductsInCategory$ = this.route.paramMap.pipe(\r\n    switchMap(paramMap => this.productService.getAllProductsInCategoryRx(paramMap.get('categoryId') || 'all')),\r\n  );\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onClickProduct(product: IProduct): void {\r\n  }\r\n\r\n}\r\n","<nav mat-tab-nav-bar>\n    <a mat-tab-link *ngFor=\"let category of allCategories$ | async\" [routerLink]=\"['..', category._id]\">{{category.name}}</a>\n</nav>\n<div class=\"container\">\n    <mat-card class=\"item\" *ngFor=\"let product of allProductsInCategory$ | async\">\n        <img mat-card-image [src]=\"product.imageUrl\" [alt]=\"product.name\">\n        <mat-card-header>\n            <mat-card-title>{{product.name}}</mat-card-title>\n            <mat-card-subtitle>{{product.price | currency}}</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-actions>\n            <button mat-icon-button color=\"primary\" (click)=\"onClickProduct(product)\">\n                <mat-icon>add_shopping_cart</mat-icon>\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { SignInPage } from './sign-in-page/sign-in.page';\nimport { SignUpPage } from './sign-up-page/sign-up.page';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'signup',\n        component: SignUpPage,\n      },\n      {\n        path: 'signin',\n        component: SignInPage,\n      },\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'signin',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IProduct } from '../types/product.interface';\r\nimport { IProductCategory } from '../types/product-category.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  saveProductRx(product: IProduct, imageFile?: File): Observable<IProduct> {\r\n    const body = new FormData();\r\n    body.append('_id', product._id);\r\n    body.append('name', product.name);\r\n    body.append('price', product.price.toFixed(2));\r\n    if (imageFile) {\r\n      body.append('image', imageFile);\r\n    }\r\n    return product._id\r\n      ? this.http.put<IProduct>(`/api/category/${product.categoryId}/product/${product._id}`, body)\r\n      : this.http.post<IProduct>(`/api/category/${product.categoryId}/product`, body);\r\n  }\r\n\r\n  getAllCategoriesRx(): Observable<Array<IProductCategory>> {\r\n    return this.http.get<Array<IProductCategory>>('/api/category/all');\r\n  }\r\n\r\n  getAllProductsInCategoryRx(categoryId: string): Observable<Array<IProduct>> {\r\n    return this.http.get<Array<IProduct>>(`/api/category/${categoryId}/product/all`);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): boolean | UrlTree {\n    return this.authService.getLoggedInUser()?.role === 'customer' || this.router.parseUrl('/');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): boolean | UrlTree {\n    return !this.authService.getLoggedInUser() || this.router.parseUrl('/');\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AlertService } from './services/alert.service';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'kwik-e-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'Kwik-E-Mart';\n\n  public constructor(\n    private alertService: AlertService,\n    private authService: AuthService,\n    private snackBar: MatSnackBar,\n    private router: Router,\n  ) { }\n\n  public ngOnInit(): void {\n    document.title = this.title;\n    this.alertService.alert.subscribe((message: string) => this.openSnackBar(message));\n    this.authService.loggedInUserChange$.subscribe(() => this.router.navigateByUrl('/'));\n  }\n\n  private openSnackBar(message: string): void {\n    this.snackBar.open(message, 'Dismiss', { duration: 4000 });\n  }\n\n}\n","<mat-toolbar>\r\n    <mat-toolbar-row>\r\n        <span>{{title}}</span>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  templateUrl: './sign-up.page.html',\n  styleUrls: ['./sign-up.page.css']\n})\n// tslint:disable-next-line: component-class-suffix\nexport class SignUpPage implements OnInit {\n\n  constructor(\n    private alertService: AlertService,\n    private userService: UserService,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public submit(f: NgForm): void {\n    // tslint:disable-next-line: deprecation\n    this.userService.createRx(f.value).subscribe(async () => {\n      this.alertService.postAlert(`Congratulations, ${f.value.firstName}! You are now a member of Kwik-E-Mart! Please log in using your e-mail and password.`);\n      return await this.router.navigateByUrl('/login');\n    });\n  }\n\n}\n","<div class=\"container\">\n    <mat-card>\n        <form action=\"/api/user\" method=\"post\" #f=\"ngForm\" (ngSubmit)=\"submit(f)\">\n            <mat-card-header>\n                <mat-card-title>Welcome to Kwik-E-Mart!</mat-card-title>\n                <mat-card-subtitle>Fill up your personal info below.</mat-card-subtitle>\n            </mat-card-header>\n            <mat-card-content>\n                <mat-horizontal-stepper linear #stepper>\n                    <mat-step label=\"Step 1\">\n                        <div class=\"field-group\">\n                            <mat-form-field appearance=\"fill\">\n                                <mat-label>ID (ת.ז.)</mat-label>\n                                <input matInput type=\"text\" name=\"_id\" id=\"id\" autocomplete=\"off\" required ngModel>\n                            </mat-form-field>\n                            <mat-form-field appearance=\"fill\">\n                                <mat-label>E-Mail</mat-label>\n                                <input matInput type=\"email\" name=\"email\" id=\"email\" autocomplete=\"email\" required ngModel>\n                            </mat-form-field>\n                            <mat-form-field appearance=\"fill\">\n                                <mat-label>Password</mat-label>\n                                <input matInput type=\"password\" name=\"password\" id=\"password\" autocomplete=\"new-password\" required ngModel>\n                            </mat-form-field>\n                            <mat-form-field appearance=\"fill\">\n                                <mat-label>Repeat Password</mat-label>\n                                <input matInput type=\"password\" name=\"passwordRepeat\" id=\"passwordRepeat\" autocomplete=\"off\" required ngModel>\n                            </mat-form-field>\n                            <div>\n                                <button type=\"button\" mat-button (click)=\"stepper.reset()\">Reset</button>\n                                <button type=\"button\" mat-button matStepperNext>Next</button>\n                            </div>\n                        </div>\n                    </mat-step>\n                    <mat-step label=\"Step 2\">\n                        <div class=\"field-group\">\n                            <mat-form-field appearance=\"fill\">\n                                <mat-label>City</mat-label>\n                                <mat-select name=\"city\" required ngModel>\n                                    <mat-option value=\"Jerusalem\">Jerusalem</mat-option>\n                                    <mat-option value=\"Tel Aviv\">Tel Aviv</mat-option>\n                                    <mat-option value=\"Haifa\">Haifa</mat-option>\n                                    <mat-option value=\"Rishon LeZion\">Rishon LeZion</mat-option>\n                                    <mat-option value=\"Petah Tikva\">Petah Tikva</mat-option>\n                                    <mat-option value=\"Ashdod\">Ashdod</mat-option>\n                                    <mat-option value=\"Netanya\">Netanya</mat-option>\n                                    <mat-option value=\"Beer Sheva\">Beer Sheva</mat-option>\n                                    <mat-option value=\"Bnei Brak\">Bnei Brak</mat-option>\n                                    <mat-option value=\"Holon\">Holon</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <mat-form-field appearance=\"fill\">\n                                <mat-label>Street Address</mat-label>\n                                <input matInput type=\"text\" name=\"streetAddress\" id=\"streetAddress\" autocomplete=\"street-address\" required ngModel>\n                            </mat-form-field>\n                            <mat-form-field appearance=\"fill\">\n                                <mat-label>First Name</mat-label>\n                                <input matInput type=\"text\" name=\"firstName\" id=\"firstName\" autocomplete=\"given-name\" required ngModel>\n                            </mat-form-field>\n                            <mat-form-field appearance=\"fill\">\n                                <mat-label>Last Name</mat-label>\n                                <input matInput type=\"text\" name=\"lastName\" id=\"lastName\" autocomplete=\"family-name\" required ngModel>\n                            </mat-form-field>\n                            <button type=\"submit\" mat-flat-button color=\"primary\">Sign Up</button>\n                            <div>\n                                <button type=\"button\" mat-button matStepperPrevious>Back</button>\n                                <button type=\"button\" mat-button (click)=\"stepper.reset()\">Reset</button>\n                            </div>\n                        </div>\n                    </mat-step>\n                </mat-horizontal-stepper>\n            </mat-card-content>\n        </form>\n        <div class=\"text-center\">\n            <a routerLink=\"../signin\">Already have an account? Log in!</a>\n        </div>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CartService } from 'src/app/services/cart.service';\n\n@Component({\n  templateUrl: './root.page.html',\n  styleUrls: ['./root.page.css']\n})\n// tslint:disable-next-line: component-class-suffix\nexport class RootPage implements OnInit {\n\n  constructor(\n    public authService: AuthService,\n    public cartService: CartService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public logOut(): void {\n    // tslint:disable-next-line: deprecation\n    this.authService.logOutRx().subscribe();\n  }\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\r\n\r\n    <!-- Shopping Cart Sidenav -->\r\n    <mat-sidenav class=\"sidenav\" mode=\"over\" position=\"end\" fixedInViewport #cartSidenav>\r\n        <mat-toolbar class=\"justify-content-center\">Your Cart</mat-toolbar>\r\n        <form class=\"container-fluid\" (ngSubmit)=\"cartSidenav.toggle()\">\r\n            <div class=\"row row-cols-1 p-2\">\r\n                <div class=\"alert alert-secondary text-center\" *ngIf=\"cartService.isEmpty()\">The cart is empty.</div>\r\n                <ng-container *ngIf=\"!cartService.isEmpty()\">\r\n                    <hr class=\"bg-dark\">\r\n                    <div class=\"card my-2\" *ngFor=\"let item of cartService.getAllItems()\">\r\n                        <img class=\"card-img-top\" [src]=\"item.product.imageUrl\" [alt]=\"item.product.name\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title text-center\">{{item.product.name}}</h5>\r\n                            <h6 class=\"card-subtitle text-center\">{{item.product.price | currency}}</h6>\r\n                            <div class=\"input-group mt-3\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <button class=\"btn btn-outline-primary\" type=\"button\"\r\n                                        (click)=\"item.quantity > 1 && cartService.setItem(item.product, item.quantity - 1)\">-</button>\r\n                                </div>\r\n                                <input class=\"form-control text-center\" type=\"number\" min=\"1\" readonly [name]=\"item.product._id\" [value]=\"item.quantity\">\r\n                                <div class=\"input-group-append\">\r\n                                    <button class=\"btn btn-outline-primary\" type=\"button\"\r\n                                        (click)=\"cartService.setItem(item.product, item.quantity + 1)\">+</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-footer d-flex justify-content-center\">\r\n                            <button mat-icon-button (click)=\"cartService.setItem(item.product, 0)\">\r\n                                <mat-icon>remove_shopping_cart</mat-icon>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <hr class=\"bg-dark\">\r\n                    <h5 class=\"text-center\">Cart Total: {{cartService.getTotalPrice() | currency}}</h5>\r\n                </ng-container>\r\n                <div class=\"btn-group\">\r\n                    <button class=\"btn btn-primary mt-3\" type=\"submit\" [disabled]=\"cartService.isEmpty()\">\r\n                        Check Out\r\n                    </button>\r\n                    <button class=\"btn btn-outline-danger mt-3 flex-grow-0\" [disabled]=\"cartService.isEmpty()\">\r\n                        <mat-icon>remove_shopping_cart</mat-icon>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n\r\n        <!-- Main Toolbar -->\r\n        <mat-toolbar>\r\n\r\n            <mat-toolbar-row>\r\n\r\n                <!-- Website Title -->\r\n                <span>Kwik-E-Mart</span>\r\n\r\n                <span class=\"flex-fill\"></span>\r\n\r\n                <!-- Logged-In User + Logout Button + Shopping Cart Button -->\r\n                <ng-container *ngIf=\"authService.getLoggedInUser() as user\">\r\n                    <span>Hello, {{user.name.first}}!</span>\r\n                    <a routerLink=\"/\" (click)=\"logOut()\">Log Out</a>\r\n                    <!-- Shopping Cart Button -->\r\n                    <button *ngIf=\"user.role === 'customer'\" type=\"button\" mat-icon-button [matBadge]=\"cartService.getTotalQuantity()\"\r\n                        [matBadgeHidden]=\"cartService.isEmpty()\" matBadgeColor=\"warn\" (click)=\"cartSidenav.toggle()\">\r\n                        <mat-icon>shopping_cart</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n\r\n            </mat-toolbar-row>\r\n\r\n        </mat-toolbar>\r\n\r\n        <router-outlet></router-outlet>\r\n\r\n    </mat-sidenav-content>\r\n\r\n</mat-sidenav-container>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SignInPage } from './sign-in-page/sign-in.page';\nimport { SignUpPage } from './sign-up-page/sign-up.page';\n\n@NgModule({\n  declarations: [\n    SignInPage,\n    SignUpPage,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatStepperModule,\n    AuthRoutingModule,\n  ]\n})\nexport class AuthModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): boolean | UrlTree {\n    return this.authService.getLoggedInUser()?.role === 'admin' || this.router.parseUrl('/');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AdminModule } from './admin/admin.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthModule } from './auth/auth.module';\nimport { CustomerModule } from './customer/customer.module';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    AuthModule,\n    AdminModule,\n    CustomerModule,\n    AppRoutingModule,\n  ],\n  declarations: [\n    AppComponent,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { IProduct } from './product.interface';\r\n\r\nexport class OrderItem {\r\n    constructor(\r\n        public product: IProduct,\r\n        public quantity: number,\r\n        public purchasePrice: number,\r\n    ) { }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ICartItemsMap } from '../types/cart-items-map.interface';\r\nimport { OrderItem } from '../types/order-item';\r\nimport { IProduct } from '../types/product.interface';\r\n\r\nconst CARTITEMS = 'cartItems';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.validateStoredCart();\r\n  }\r\n\r\n  getAllItems(): Array<OrderItem> {\r\n    return Object.values(this.getCartItemsMap());\r\n  }\r\n\r\n  getTotalQuantity(): number {\r\n    return this.getTotal(item => item.quantity);\r\n  }\r\n\r\n  getTotalPrice(): number {\r\n    return this.getTotal(item => item.quantity * item.purchasePrice);\r\n  }\r\n\r\n  setItem(product: IProduct, quantity: number): void {\r\n    const map = this.getCartItemsMap();\r\n    if (quantity > 0) {\r\n      map[product._id] = new OrderItem(product, quantity, product.price);\r\n    }\r\n    else {\r\n      delete map[product._id];\r\n    }\r\n    this.setCartItemsMap(map);\r\n  }\r\n\r\n  empty(): void {\r\n    this.setCartItemsMap({});\r\n  }\r\n\r\n  isEmpty(): boolean {\r\n    return this.getTotal(item => 1) === 0;\r\n  }\r\n\r\n  private getTotal(selectTerm: (item: OrderItem) => number): number {\r\n    return Object.values(this.getCartItemsMap())\r\n      .map(selectTerm)\r\n      .reduce((total, term) => total + term, 0);\r\n  }\r\n\r\n  private getCartItemsMap(): ICartItemsMap {\r\n    return JSON.parse(localStorage.getItem(CARTITEMS) || '{}');\r\n  }\r\n\r\n  private setCartItemsMap(map: ICartItemsMap): void {\r\n    localStorage.setItem(CARTITEMS, JSON.stringify(map));\r\n  }\r\n\r\n  /**\r\n   * Validate localStorage.cartItems; delete it if it doesn't conform to the expected structure.\r\n   */\r\n  private validateStoredCart(): void {\r\n    const mapJson = localStorage.getItem(CARTITEMS);\r\n    // tslint:disable-next-line: label-position\r\n    test: {\r\n      if (typeof mapJson === 'string') {\r\n        const map = JSON.parse(mapJson);\r\n        if (map && typeof map === 'object' && Object.getPrototypeOf(map) === Object.prototype) {\r\n          const items: Array<OrderItem> = Object.values(map);\r\n          try {\r\n            if (items.some(({ product: { _id, name, price, imageUrl }, quantity }) => (\r\n              typeof _id !== 'string' ||\r\n              typeof name !== 'string' ||\r\n              typeof price !== 'number' ||\r\n              typeof imageUrl !== 'string' ||\r\n              typeof quantity !== 'number'\r\n            ))) {\r\n              break test;\r\n            }\r\n          }\r\n          catch (err) {\r\n            break test;\r\n          }\r\n        }\r\n        else {\r\n          break test;\r\n        }\r\n      }\r\n      return;\r\n    }\r\n    if (mapJson) {\r\n      localStorage.removeItem(CARTITEMS);\r\n    }\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { CatalogPage } from './catalog-page/catalog.page';\nimport { CustomerRoutingModule } from './customer-routing.module';\nimport { RootPage } from './root-page/root.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    MatBadgeModule,\n    MatCardModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule,\n    CustomerRoutingModule,\n  ],\n  declarations: [\n    RootPage,\n    CatalogPage,\n  ],\n})\nexport class CustomerModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { merge } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { ProductService } from 'src/app/services/product.service';\nimport { IProduct } from 'src/app/types/product.interface';\n\n@Component({\n  templateUrl: './inventory.page.html',\n  styleUrls: ['./inventory.page.css']\n})\n// tslint:disable-next-line: component-class-suffix\nexport class InventoryPage implements OnInit {\n\n  private readonly dataChange$ = new EventEmitter();\n\n  @Output() edit = new EventEmitter<IProduct>();\n\n  public readonly allCategories$ = this.productService.getAllCategoriesRx().pipe(\n    // Don't show the 'all' category in admin mode because it makes the (+) button ambiguous.\n    map(categories => categories.filter(({ _id }) => _id !== 'all')),\n    // If :categoryId is not a valid category ID, navigate to the first category.\n    tap(categories => (\n      categories.map(({ _id }) => _id).includes(this.getCurrentCategoryId()) ||\n      this.router.navigate(['..', categories[0]._id], { relativeTo: this.route })\n    )),\n  );\n\n  /**\n   * Emits an array of products whenever one of the following happens:\n   * (1) the category changes or\n   * (2) a product is added or modified by the user.\n   */\n  public readonly allProductsInCategory$ = merge<ParamMap>(this.route.paramMap, this.dataChange$).pipe(\n    switchMap(paramMap => this.productService.getAllProductsInCategoryRx(\n      paramMap?.get('categoryId') || this.getCurrentCategoryId()\n    )),\n  );\n\n  public constructor(\n    public productService: ProductService,\n    public router: Router,\n    private route: ActivatedRoute,\n  ) { }\n\n  public ngOnInit(): void {\n  }\n\n  public onClickProduct(product: IProduct | null): void {\n    this.edit.emit(product || {\n      _id: '',\n      name: '',\n      price: 0,\n      imageUrl: '/assets/unknown.webp',\n      categoryId: this.getCurrentCategoryId(),\n    });\n  }\n\n  public touch(): void {\n    this.dataChange$.emit();\n  }\n\n  public getCurrentCategoryId(): string {\n    return this.route.snapshot.paramMap.get('categoryId') || '';\n  }\n}\n","<nav mat-tab-nav-bar>\n    <a mat-tab-link *ngFor=\"let category of allCategories$ | async\" [routerLink]=\"['..', category._id]\"\n        [active]=\"getCurrentCategoryId() == category._id\">{{category.name}}</a>\n</nav>\n\n<div class=\"container\">\n    <div class=\"item\" *ngFor=\"let product of allProductsInCategory$ | async\">\n        <mat-card>\n            <img mat-card-image [src]=\"product.imageUrl\" [alt]=\"product.name\">\n            <mat-card-header>\n                <mat-card-title>{{product.name}}</mat-card-title>\n                <mat-card-subtitle>{{product.price | currency}}</mat-card-subtitle>\n            </mat-card-header>\n            <mat-card-actions>\n                <button mat-icon-button color=\"primary\" (click)=\"onClickProduct(product)\">\n                    <mat-icon>edit</mat-icon>\n                </button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n\n<button mat-fab color=\"primary\" (click)=\"onClickProduct(null)\">\n    <mat-icon>add</mat-icon>\n</button>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { InventoryPage } from './inventory-page/inventory.page';\r\nimport { RootPage } from './root-page/root.page';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatBadgeModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MaterialFileInputModule,\r\n    AdminRoutingModule,\r\n  ],\r\n  declarations: [\r\n    RootPage,\r\n    InventoryPage,\r\n  ],\r\n})\r\nexport class AdminModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CatalogPage } from './catalog-page/catalog.page';\r\nimport { RoleGuard } from './role.guard';\r\nimport { RootPage } from './root-page/root.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'customer',\r\n    component: RootPage,\r\n    canActivate: [RoleGuard],\r\n    children: [\r\n      { path: 'category/:categoryId', component: CatalogPage },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CustomerRoutingModule { }\r\n","import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { IUser } from '../types/user.interface';\r\nimport { AlertService } from './alert.service';\r\n\r\nconst USERLSKEY = 'user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  public readonly loggedInUserChange$ = new EventEmitter<IUser | null>();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private alertService: AlertService,\r\n  ) {\r\n    // tslint:disable-next-line: deprecation\r\n    this.http.get<IUser>('/api/auth').subscribe({\r\n      next: this.setLoggedInUser.bind(this),\r\n      error: (error: HttpErrorResponse) => {\r\n        if (error.status === 404) {\r\n          this.setLoggedInUser(null);\r\n        } else {\r\n          this.alertService.postAlert(`${error.status} ${error.statusText}`);\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  public getLoggedInUser(): IUser | null {\r\n    const userJson = localStorage.getItem(USERLSKEY);\r\n    return userJson && JSON.parse(userJson);\r\n  }\r\n\r\n  private setLoggedInUser(user: IUser | null): void {\r\n    const prevUser = this.getLoggedInUser();\r\n    if (user) {\r\n      localStorage.setItem(USERLSKEY, JSON.stringify(user));\r\n    }\r\n    else {\r\n      localStorage.removeItem(USERLSKEY);\r\n    }\r\n    if (user?._id !== prevUser?._id) {\r\n      this.loggedInUserChange$.emit(user);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log in.\r\n   * @param email E-Mail\r\n   * @param password Password\r\n   */\r\n  public logInRx(email: string, password: string): Observable<IUser | null> {\r\n    return this.http.put<IUser>('/api/auth', new HttpParams({ fromObject: { email, password } })).pipe(\r\n      tap(this.setLoggedInUser.bind(this)),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Log out.\r\n   */\r\n  public logOutRx(): Observable<void> {\r\n    this.setLoggedInUser(null);\r\n    return this.http.delete<void>('/api/auth');\r\n  }\r\n\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  templateUrl: './sign-in.page.html',\r\n  styleUrls: ['./sign-in.page.css']\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class SignInPage implements OnInit {\r\n\r\n  email = '';\r\n  password = '';\r\n\r\n  constructor(\r\n    private alertService: AlertService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.authService.logInRx(this.email, this.password)\r\n      .pipe(catchError((error: HttpErrorResponse) => {\r\n        this.alertService.postAlert(error.statusText);\r\n        if (error.error instanceof ErrorEvent) {\r\n          // A client-side or network error occurred. Handle it accordingly.\r\n          console.error('An error occurred:', error.error.message);\r\n        } else {\r\n          // The backend returned an unsuccessful response code.\r\n          // The response body may contain clues as to what went wrong.\r\n          console.error(\r\n            `Backend returned code ${error.status}, ` +\r\n            `body was: ${error.error}`);\r\n        }\r\n        return throwError('Danger');\r\n      }))\r\n      // tslint:disable-next-line: deprecation\r\n      .subscribe(async () => await this.router.navigateByUrl('/'));\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\n    <mat-card>\n        <form novalidate (ngSubmit)=\"onSubmit()\">\n            <mat-card-header>\n                <mat-card-title>Welcome to Kwik-E-Mart!</mat-card-title>\n                <mat-card-subtitle>Please sign in.</mat-card-subtitle>\n            </mat-card-header>\n            <mat-card-content>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>E-Mail</mat-label>\n                    <input matInput type=\"email\" name=\"email\" autocomplete=\"email\" required [(ngModel)]=\"email\">\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Password</mat-label>\n                    <input matInput type=\"password\" name=\"password\" autocomplete=\"current-password\" required [(ngModel)]=\"password\">\n                </mat-form-field>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-flat-button color=\"primary\" type=\"submit\">Sign In</button>\n            </mat-card-actions>\n        </form>\n        <div class=\"text-center\">\n            <a routerLink=\"../signup\">Don't have an account? Sign up!</a>\n        </div>\n    </mat-card>\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IUser } from '../types/user.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  createRx(user: { _id: string }): Observable<IUser> {\r\n    return this.http.put<IUser>(`/api/user/${user._id}`, new HttpParams({ fromObject: user }));\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FileInputComponent } from 'ngx-material-file-input';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { IProduct } from 'src/app/types/product.interface';\r\nimport { InventoryPage } from '../inventory-page/inventory.page';\r\n\r\n@Component({\r\n  templateUrl: './root.page.html',\r\n  styleUrls: ['./root.page.css']\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class RootPage implements OnInit {\r\n\r\n  private inventoryPage: InventoryPage | undefined;\r\n\r\n  public editedProduct: IProduct | null = null;\r\n\r\n  public constructor(\r\n    public authService: AuthService,\r\n    public productService: ProductService,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n  }\r\n\r\n  public onActivate(page: Component): void {\r\n    if (page instanceof InventoryPage) {\r\n      this.inventoryPage = page;\r\n      this.inventoryPage.edit.subscribe((product: IProduct) => this.onEdit(product));\r\n    }\r\n    else {\r\n      throw new Error(`Expected argument to be of type InventoryPage but got ${page}.`);\r\n    }\r\n  }\r\n\r\n  public onEdit(product: IProduct): void {\r\n    this.editedProduct = product;\r\n  }\r\n\r\n  saveProduct({ value: product }: NgForm, imageFileInput: FileInputComponent): void {\r\n    product.categoryId ||= this.route.snapshot.paramMap.get('categoryId');\r\n    const imageFile = imageFileInput.value?.files[0];\r\n    // tslint:disable-next-line: deprecation\r\n    this.productService.saveProductRx(product, imageFile).subscribe(() => this.inventoryPage?.touch());\r\n  }\r\n\r\n  public logOut(): void {\r\n    // tslint:disable-next-line: deprecation\r\n    this.authService.logOutRx().subscribe();\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container>\n\n    <!-- Product Details Sidenav -->\n    <mat-sidenav mode=\"push\" position=\"start\" fixedInViewport [opened]=\"!!editedProduct\" (closed)=\"editedProduct = null\" #sidenav>\n\n        <form method=\"post\" action=\"/api/category/0/product\" encType=\"multipart/form-data\" #product=\"ngForm\"\n            (ngSubmit)=\"saveProduct(product, image); sidenav.close()\">\n            <input type=\"hidden\" name=\"_id\" [ngModel]=\"editedProduct?._id\">\n            <input type=\"hidden\" name=\"categoryId\" [ngModel]=\"editedProduct?.categoryId\">\n            <mat-card>\n                <img mat-card-image [src]=\"editedProduct?.imageUrl\" [alt]=\"editedProduct?.name\">\n                <mat-card-header>\n                    <mat-card-title>{{editedProduct?.name || 'New Product'}}</mat-card-title>\n                    <mat-card-subtitle>{{editedProduct?.price | currency}}</mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-content>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Image File</mat-label>\n                        <ngx-mat-file-input accept=\"image/*\" #image></ngx-mat-file-input>\n                        <mat-icon matSuffix>image</mat-icon>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Name</mat-label>\n                        <input matInput type=\"text\" name=\"name\" [ngModel]=\"editedProduct?.name\" required>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>Price</mat-label>\n                        <input matInput type=\"number\" name=\"price\" [ngModel]=\"editedProduct?.price\">\n                    </mat-form-field>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button mat-flat-button color=\"basic\" type=\"reset\" (click)=\"sidenav.close()\">Cancel</button>\n                    <button mat-flat-button color=\"primary\" type=\"submit\">Save</button>\n                </mat-card-actions>\n            </mat-card>\n        </form>\n\n    </mat-sidenav>\n\n    <mat-sidenav-content>\n\n        <!-- Main Toolbar -->\n        <mat-toolbar color=\"primary\">\n\n            <mat-toolbar-row>\n\n                <!-- Website Title -->\n                <span class=\"cursor-pointer\">Kwik-E-Mart</span>\n\n                <span class=\"flex-fill\"></span>\n\n                <!-- Logged-In User + Logout Button -->\n                <ng-container *ngIf=\"authService.getLoggedInUser() as user\">\n                    <button mat-button [matMenuTriggerFor]=\"userMenu\">Hello, {{user.name.first}}!</button>\n                    <mat-menu #userMenu=\"matMenu\">\n                        <button mat-menu-item (click)=\"logOut()\">\n                            <mat-icon>logout</mat-icon>Log Out\n                        </button>\n                    </mat-menu>\n                </ng-container>\n\n            </mat-toolbar-row>\n\n        </mat-toolbar>\n\n        <router-outlet (activate)=\"onActivate($event)\"></router-outlet>\n\n    </mat-sidenav-content>\n\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthorizationGuard } from './authorization.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    canActivate: [AuthorizationGuard],\r\n    children: [],\r\n  },\r\n  { path: '**', redirectTo: '/' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(\r\n    routes,\r\n    { enableTracing: true }, // <-- debugging purposes only\r\n  )],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}