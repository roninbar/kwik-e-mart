{"version":3,"sources":["./src/app/customer/3_thank-you/thank-you.page.ts","./src/app/customer/3_thank-you/thank-you.page.html","./src/app/authorization.guard.ts","./src/app/admin/admin-routing.module.ts","./src/app/services/alert.service.ts","./src/app/auth/auth-routing.module.ts","./src/environments/environment.ts","./src/app/auth/welcome/welcome.page.ts","./src/app/auth/welcome/welcome.page.html","./src/app/services/product.service.ts","./src/app/customer/role.guard.ts","./src/app/customer/2_checkout/checkout.page.ts","./src/app/customer/2_checkout/checkout.page.html","./src/app/admin/1_inventory/inventory.page.ts","./src/app/admin/1_inventory/inventory.page.html","./src/app/auth/auth.guard.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/auth/sign-up-page/sign-up.page.ts","./src/app/auth/sign-up-page/sign-up.page.html","./src/app/services/cities.service.ts","./src/app/auth/auth.module.ts","./src/app/admin/role.guard.ts","./src/app/app.module.ts","./src/app/types/order-item.ts","./src/app/customer/order-summary/order-summary.component.ts","./src/app/customer/order-summary/order-summary.component.html","./src/app/services/cart.service.ts","./src/app/customer/customer.module.ts","./src/app/services/gs.service.ts","./src/app/admin/admin.module.ts","./src/app/customer/customer-routing.module.ts","./src/app/services/order.service.ts","./src/app/services/auth.service.ts","./src/app/auth/sign-in-page/sign-in.page.ts","./src/app/auth/sign-in-page/sign-in.page.html","./src/app/services/user.service.ts","./src/app/customer/1_catalog/catalog.page.ts","./src/app/customer/1_catalog/catalog.page.html","./src/app/app-routing.module.ts","./src/app/admin/0_root/root.page.ts","./src/app/admin/0_root/root.page.html","./src/app/customer/0_root/root.page.ts","./src/app/customer/0_root/root.page.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { OrderService } from 'src/app/services/order.service';\r\n\r\n@Component({\r\n  templateUrl: './thank-you.page.html',\r\n  styleUrls: ['./thank-you.page.css']\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class ThankYouPage {\r\n\r\n  public readonly lastOrder = this.orderService.getLastOrder();\r\n\r\n  constructor(\r\n    private orderService: OrderService,\r\n  ) { }\r\n\r\n}\r\n","<mat-card>\r\n    <img mat-card-image src=\"/assets/thank-you-come-again.jpg\" />\r\n    <mat-card-header>\r\n        <mat-card-title>Order #{{lastOrder._id}}</mat-card-title>\r\n        <mat-card-subtitle>Placed on {{lastOrder.createdAt | date:\"full\"}}</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <mat-divider></mat-divider>\r\n        <h2>Order Summary</h2>\r\n        <kwik-e-mart-order-summary [dataSource]=\"lastOrder.items\"></kwik-e-mart-order-summary>\r\n    </mat-card-content>\r\n    <mat-card-content>\r\n        <mat-divider></mat-divider>\r\n        <h2>Delivery</h2>\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">City</th>\r\n                    <td>{{lastOrder.delivery.to.city}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Street</th>\r\n                    <td>{{lastOrder.delivery.to.street}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">House</th>\r\n                    <td>{{lastOrder.delivery.to.house}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Date</th>\r\n                    <td>{{lastOrder.delivery.on | date:\"longDate\"}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </mat-card-content>\r\n    <mat-card-content>\r\n        <mat-divider></mat-divider>\r\n        <h2>Payment Details</h2>\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">CC Number</th>\r\n                    <td>{{lastOrder.payment.cc.number}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </mat-card-content>\r\n    <mat-card-footer>\r\n        <mat-divider></mat-divider>\r\n        <div>\r\n            <a mat-button download [href]=\"lastOrder.receiptUrl\">\r\n                <mat-icon>download</mat-icon>\r\n                Download as PDF\r\n            </a>\r\n            <a mat-button color=\"primary\" [routerLink]=\"['..']\" queryParamsHandling=\"preserve\">\r\n                <mat-icon>shopping_cart</mat-icon>\r\n                Continue Shopping\r\n            </a>\r\n        </div>\r\n    </mat-card-footer>\r\n</mat-card>","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthorizationGuard implements CanActivate {\r\n  constructor(private router: Router, private authService: AuthService) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): UrlTree {\r\n    const user = this.authService.getLoggedInUser();\r\n    return (\r\n      user?.role === 'admin' && this.router.parseUrl('/admin') ||\r\n      user?.role === 'customer' && this.router.parseUrl('/customer') ||\r\n      this.router.parseUrl('/auth')\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RootPage } from './0_root/root.page';\r\nimport { InventoryPage } from './1_inventory/inventory.page';\r\nimport { RoleGuard } from './role.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'admin',\r\n    component: RootPage,\r\n    canActivate: [RoleGuard],\r\n    children: [\r\n      {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: '0', // Invalid category id to be replaced with the id of the first category when it becomes available\r\n      },\r\n      { path: ':categoryId', component: InventoryPage },\r\n    ],\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { OperatorFunction, Observable, EMPTY } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertService {\r\n\r\n  public readonly alert: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor() { }\r\n\r\n  postAlert(message: string): void {\r\n    this.alert.emit(message);\r\n  }\r\n}\r\n\r\nexport function httpAlert<T>(alertService: AlertService): OperatorFunction<T, T> {\r\n  return catchError<T, Observable<never>>(({ status, statusText }: HttpErrorResponse) => {\r\n    alertService.postAlert(`${status} ${statusText}`);\r\n    return EMPTY;\r\n  });\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { SignInPage } from './sign-in-page/sign-in.page';\r\nimport { SignUpPage } from './sign-up-page/sign-up.page';\r\nimport { WelcomePage } from './welcome/welcome.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'auth',\r\n    canActivate: [AuthGuard],\r\n    component: WelcomePage,\r\n    children: [\r\n      {\r\n        path: 'signup',\r\n        component: SignUpPage,\r\n      },\r\n      {\r\n        path: 'signin',\r\n        component: SignInPage,\r\n      },\r\n      {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: 'signin',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { OrderService } from 'src/app/services/order.service';\r\nimport { ProductService } from 'src/app/services/product.service';\r\n\r\nconst count = map((array: any[]) => array.length);\r\n\r\n@Component({\r\n  selector: 'kwik-e-mart-welcome',\r\n  templateUrl: './welcome.page.html',\r\n  styleUrls: ['./welcome.page.css'],\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class WelcomePage implements OnInit {\r\n\r\n  public readonly nCategories$ = this.productService.getAllCategoriesRx().pipe(count, map(n => n - 1));\r\n  public readonly nProducts$ = this.productService.getAllProductsInCategoryRx('all').pipe(count);\r\n  public readonly nOrders$ = this.orderService.getAllOrdersRx().pipe(count);\r\n\r\n  constructor(\r\n    public cartService: CartService,\r\n    public orderService: OrderService,\r\n    private productService: ProductService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"grid-list\">\r\n    <div class=\"grid-tile\" id=\"welcome-image\">\r\n        <img src=\"/assets/kwik-e-mart.png\">\r\n    </div>\r\n    <div class=\"grid-tile\" id=\"welcome-auth\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n    <div class=\"grid-tile\" id=\"welcome-stats\">\r\n        <mat-card>\r\n            <mat-list>\r\n                <mat-list-item>\r\n                    {{nProducts$ | async}} products available in {{nCategories$ | async}} categories.\r\n                </mat-list-item>\r\n                <mat-list-item>\r\n                    {{nOrders$ | async}} orders placed so far.\r\n                </mat-list-item>\r\n                <mat-list-item *ngIf=\"!!orderService.getLastOrder()\">\r\n                    Your last order totaled {{orderService.getLastOrder().total | currency}}.\r\n                </mat-list-item>\r\n                <mat-list-item *ngIf=\"!cartService.isEmpty()\">\r\n                    You have {{cartService.getTotalQuantity()}} {{cartService.getTotalQuantity() == 1 ? 'item' : 'items'}} in the shopping cart.\r\n                </mat-list-item>\r\n            </mat-list>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { HttpClient, HttpParameterCodec, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IProduct } from '../types/product.interface';\r\nimport { IProductCategory } from '../types/product-category.interface';\r\nimport { AlertService, httpAlert } from './alert.service';\r\n\r\nclass ProductEncoder implements HttpParameterCodec {\r\n\r\n  encodeKey(key: string): string {\r\n    return key;\r\n  }\r\n\r\n  encodeValue(value: string): string {\r\n    return encodeURIComponent(value);\r\n  }\r\n\r\n  decodeKey(key: string): string {\r\n    return key;\r\n  }\r\n\r\n  decodeValue(value: string): string {\r\n    return decodeURIComponent(value);\r\n  }\r\n\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private alertService: AlertService,\r\n  ) { }\r\n\r\n  saveProductRx(product: IProduct): Observable<IProduct> {\r\n    const body = new HttpParams({\r\n      fromObject: {\r\n        name: product.name,\r\n        price: product.price.toFixed(2),\r\n        imageUrl: product.imageUrl,\r\n      },\r\n      encoder: new ProductEncoder(),\r\n    });\r\n    return (product._id\r\n      ? this.http.put<IProduct>(`/api/category/${product.categoryId}/product/${product._id}`, body)\r\n      : this.http.post<IProduct>(`/api/category/${product.categoryId}/product`, body))\r\n      .pipe(httpAlert(this.alertService));\r\n  }\r\n\r\n  getAllCategoriesRx(): Observable<Array<IProductCategory>> {\r\n    return this.http.get<Array<IProductCategory>>('/api/category/all')\r\n      .pipe(httpAlert(this.alertService));\r\n  }\r\n\r\n  getAllProductsInCategoryRx(categoryId: string, q?: string): Observable<Array<IProduct>> {\r\n    return this.http.get<Array<IProduct>>(`/api/category/${categoryId}/product/all` + (q ? `?q=${q}` : ''))\r\n      .pipe(httpAlert(this.alertService));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): boolean | UrlTree {\r\n    return this.authService.getLoggedInUser()?.role === 'customer' || this.router.parseUrl('/');\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DateFilterFn } from '@angular/material/datepicker';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport { Moment } from 'moment';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { CitiesService } from 'src/app/services/cities.service';\r\nimport { OrderService } from 'src/app/services/order.service';\r\nimport { OrderItem } from 'src/app/types/order-item';\r\n\r\nconst MAX_ORDERS_PER_DAY = 3;\r\n\r\n@Component({\r\n  templateUrl: './checkout.page.html',\r\n  styleUrls: ['./checkout.page.css'],\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class CheckoutPage {\r\n  house = 0;\r\n  street = '';\r\n  city = '';\r\n\r\n  readonly cities = this.citiesService.cities;\r\n\r\n  readonly minDeliveryDate = moment().add(1, 'day');\r\n\r\n  public deliveryDateFilter: DateFilterFn<Moment | null> = (date) => false;\r\n\r\n  constructor(\r\n    public cartService: CartService,\r\n    private citiesService: CitiesService,\r\n    private orderService: OrderService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) {\r\n    this.orderService.getAllOrdersRx().subscribe((orders) => {\r\n      // Count the number of orders on each date.\r\n      const nOrders = orders\r\n        .map(({ delivery: { on } }) => on.split('T')[0])\r\n        .reduce(\r\n          (n: { [d: string]: number }, d) =>\r\n            Object.assign(n, { [d]: (n[d] || 0) + 1 }),\r\n          {}\r\n        );\r\n      this.deliveryDateFilter = (date) =>\r\n        !!date && (nOrders[date.format('yyyy-MM-DD')] || 0) < MAX_ORDERS_PER_DAY;\r\n    });\r\n  }\r\n\r\n  autoFill(): void {\r\n    const user = this.authService.getLoggedInUser();\r\n    if (user) {\r\n      ({\r\n        address: { city: this.city, street: this.street, house: this.house },\r\n      } = user);\r\n    }\r\n  }\r\n\r\n  placeOrder(f: NgForm): void {\r\n    // tslint:disable-next-line: deprecation\r\n    this.orderService.placeOrderRx(f.value).subscribe(async () => {\r\n      this.cartService.empty();\r\n      await this.router.navigate(['../thankyou'], { relativeTo: this.route, queryParamsHandling: 'preserve' });\r\n    });\r\n  }\r\n\r\n  productIdOfCartItem(index: number, item: OrderItem): string {\r\n    return item.product._id;\r\n  }\r\n}\r\n","<form method=\"post\" action=\"/api/order\" #f=\"ngForm\" (ngSubmit)=\"placeOrder(f)\">\r\n    <mat-vertical-stepper linear #stepper>\r\n        <mat-step label=\"Review your order.\">\r\n            <kwik-e-mart-order-summary [dataSource]=\"cartService.getAllItems()\"></kwik-e-mart-order-summary>\r\n            <ng-container *ngFor=\"let item of cartService.getAllItems(); let i = index; trackBy: productIdOfCartItem\">\r\n                <input type=\"hidden\" name=\"items[{{i}}][product]\" [ngModel]=\"item.product._id\">\r\n                <input type=\"hidden\" name=\"items[{{i}}][quantity]\" [ngModel]=\"item.quantity\">\r\n                <input type=\"hidden\" name=\"items[{{i}}][purchasePrice]\" [ngModel]=\"item.purchasePrice\">\r\n            </ng-container>\r\n            <input type=\"hidden\" name=\"total\" [ngModel]=\"cartService.getTotalPrice().toFixed(2)\">\r\n            <div>\r\n                <button type=\"button\" mat-button matStepperNext>Next</button>\r\n            </div>\r\n        </mat-step>\r\n        <mat-step label=\"Choose your preferred time and place of delivery.\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Date</mat-label>\r\n                <input matInput type=\"text\" name=\"delivery[on]\" ngModel required [matDatepicker]=\"picker\" [matDatepickerFilter]=\"deliveryDateFilter\"\r\n                    [min]=\"minDeliveryDate\">\r\n                <mat-error>Please choose an available date.</mat-error>\r\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #picker></mat-datepicker>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>City</mat-label>\r\n                <input matInput type=\"text\" name=\"delivery[to][city]\" [(ngModel)]=\"city\" (cdkAutofill)=\"autoFill()\" required [matAutocomplete]=\"auto\">\r\n                <mat-error>Please type a valid city name.</mat-error>\r\n                <mat-autocomplete #auto=\"matAutocomplete\">\r\n                    <mat-option *ngFor=\"let city of cities\" [value]=\"city\">{{city}}</mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Street</mat-label>\r\n                <input matInput type=\"text\" name=\"delivery[to][street]\" [(ngModel)]=\"street\" (cdkAutofill)=\"autoFill()\" required>\r\n                <mat-error>Please type a valid street name.</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>House #</mat-label>\r\n                <input matInput type=\"number\" name=\"delivery[to][house]\" [(ngModel)]=\"house\" (cdkAutofill)=\"autoFill()\" required>\r\n                <mat-error>Please type a valid street name.</mat-error>\r\n            </mat-form-field>\r\n            <div>\r\n                <button mat-button type=\"button\" matStepperPrevious>Back</button>\r\n                <button mat-button type=\"button\" matStepperNext>Next</button>\r\n            </div>\r\n        </mat-step>\r\n        <mat-step label=\"Choose your payment method.\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Card Number</mat-label>\r\n                <input matInput type=\"text\" name=\"payment[cc][number]\" ngModel minlength=\"14\" maxlength=\"16\" pattern=\"^\\d*$\" required>\r\n                <mat-error>Please type a valid CC number.</mat-error>\r\n            </mat-form-field>\r\n            <div>\r\n                <button mat-button type=\"button\" matStepperPrevious>Back</button>\r\n                <button mat-button type=\"button\" (click)=\"stepper.reset()\">Reset</button>\r\n            </div>\r\n        </mat-step>\r\n    </mat-vertical-stepper>\r\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"f.invalid\">Place Your Order</button>\r\n</form>\r\n\r\n<mat-divider></mat-divider>\r\n\r\n<a mat-button color=\"primary\" [routerLink]=\"['..']\" queryParamsHandling=\"preserve\">\r\n    <mat-icon>shopping_cart</mat-icon>\r\n    Continue Shopping\r\n</a>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { merge } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { IProduct } from 'src/app/types/product.interface';\r\n\r\n@Component({\r\n  templateUrl: './inventory.page.html',\r\n  styleUrls: ['./inventory.page.css']\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class InventoryPage implements OnInit {\r\n\r\n  private readonly dataChange$ = new EventEmitter();\r\n\r\n  @Output() edit = new EventEmitter<IProduct>();\r\n\r\n  public readonly allCategories$ = this.productService.getAllCategoriesRx().pipe(\r\n    // Don't show the 'all' category in admin mode because it makes the (+) button ambiguous.\r\n    map(categories => categories.filter(({ _id }) => _id !== 'all')),\r\n    // If :categoryId is not a valid category ID, navigate to the first category.\r\n    tap(categories => (\r\n      categories.map(({ _id }) => _id).includes(this.getCategoryId()) ||\r\n      this.router.navigate(['..', categories[0]._id], { relativeTo: this.route })\r\n    )),\r\n  );\r\n\r\n  /**\r\n   * Emits an array of products whenever one of the following happens:\r\n   * (1) the category changes or\r\n   * (2) a product is added or modified by the user.\r\n   */\r\n  public readonly allProductsInCategory$ = merge<ParamMap>(this.route.paramMap, this.dataChange$).pipe(\r\n    switchMap(paramMap => this.productService.getAllProductsInCategoryRx(\r\n      paramMap?.get('categoryId') || this.getCategoryId()\r\n    )),\r\n  );\r\n\r\n  public constructor(\r\n    public productService: ProductService,\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n  }\r\n\r\n  public onEdit(product: IProduct | null): void {\r\n    this.edit.emit(product || {\r\n      _id: '',\r\n      name: '',\r\n      price: 0,\r\n      imageUrl: '/assets/missing-image.png',\r\n      categoryId: this.getCategoryId(),\r\n    });\r\n  }\r\n\r\n  public touch(): void {\r\n    this.dataChange$.emit();\r\n  }\r\n\r\n  public getCategoryId(): string {\r\n    return this.route.snapshot.paramMap.get('categoryId') || '';\r\n  }\r\n\r\n}\r\n","<nav mat-tab-nav-bar>\r\n    <a mat-tab-link *ngFor=\"let category of allCategories$ | async\" [routerLink]=\"['..', category._id]\"\r\n        [active]=\"getCategoryId() === category._id\">{{category.name}}</a>\r\n</nav>\r\n\r\n<div class=\"container\">\r\n    <div class=\"item\" *ngFor=\"let product of allProductsInCategory$ | async\">\r\n        <mat-card>\r\n            <img mat-card-image [src]=\"product.imageUrl\" [alt]=\"product.name\">\r\n            <mat-card-header>\r\n                <mat-card-title>{{product.name}}</mat-card-title>\r\n                <mat-card-subtitle>{{product.price | currency}}</mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-actions>\r\n                <button mat-icon-button color=\"primary\" (click)=\"onEdit(product)\">\r\n                    <mat-icon>edit</mat-icon>\r\n                </button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n<button mat-fab color=\"primary\" (click)=\"onEdit(null)\">\r\n    <mat-icon>add</mat-icon>\r\n</button>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): boolean | UrlTree {\r\n    return !this.authService.getLoggedInUser() || this.router.parseUrl('/');\r\n  }\r\n\r\n}\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { AlertService } from './services/alert.service';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Component({\r\n  selector: 'kwik-e-mart-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  title = 'Kwik-E-Mart';\r\n\r\n  public constructor(\r\n    private alertService: AlertService,\r\n    private authService: AuthService,\r\n    private snackBar: MatSnackBar,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n    document.title = this.title;\r\n    this.alertService.alert.subscribe((message: string) => this.openSnackBar(message));\r\n    this.authService.loggedInUserChange$.subscribe(() => this.router.navigateByUrl('/'));\r\n  }\r\n\r\n  private openSnackBar(message: string): void {\r\n    this.snackBar.open(message, 'Dismiss', { duration: 4000 });\r\n  }\r\n\r\n}\r\n","<!-- <mat-toolbar>\r\n    <mat-toolbar-row>\r\n        <span>{{title}}</span>\r\n    </mat-toolbar-row>\r\n</mat-toolbar> -->\r\n\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, NgForm, ValidationErrors, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { CitiesService } from 'src/app/services/cities.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'kwik-e-mart-sign-up',\r\n  templateUrl: './sign-up.page.html',\r\n  styleUrls: ['./sign-up.page.css']\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class SignUpPage implements OnInit {\r\n\r\n  public readonly form = new FormGroup({\r\n    _id: new FormControl('', [Validators.required, Validators.pattern(/^\\d{9}$/)]),\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    password: new FormControl('', [Validators.required, Validators.pattern(/^[^\\s]+$/)]),\r\n    passwordRepeat: new FormControl('', [Validators.required, Validators.pattern(/^[^\\s]+$/)]),\r\n    city: new FormControl('', [Validators.required]),\r\n    streetAddress: new FormControl('', [Validators.required, Validators.pattern(/^(\\d+\\s+\\w+)|(\\w+\\s+\\d+)$/)]),\r\n    firstName: new FormControl('', [Validators.required]),\r\n    lastName: new FormControl('', [Validators.required]),\r\n  }, {\r\n    validators: form => {\r\n      const errors = form.get('password')?.value === form.get('passwordRepeat')?.value ? null : {};\r\n      form.get('passwordRepeat')?.setErrors(errors);\r\n      return null;\r\n    },\r\n  });\r\n\r\n  public readonly cities = this.citiesService.cities;\r\n\r\n  constructor(\r\n    private citiesService: CitiesService,\r\n    private alertService: AlertService,\r\n    private userService: UserService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n  }\r\n\r\n  public submit(): void {\r\n    // tslint:disable-next-line: deprecation\r\n    this.userService.createRx(this.form.value).subscribe(async () => {\r\n      this.alertService.postAlert(`Congratulations, ${this.form.value.firstName}! You are now a member of Kwik-E-Mart! Please log in using your e-mail and password.`);\r\n      return await this.router.navigate(['../signin']);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <mat-card>\r\n        <form action=\"/api/user\" method=\"post\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n            <mat-card-header>\r\n                <mat-card-title>Welcome to Kwik-E-Mart!</mat-card-title>\r\n                <mat-card-subtitle>Fill up your personal info below.</mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-horizontal-stepper linear #stepper>\r\n                    <mat-step label=\"Step 1\">\r\n                        <div class=\"field-group\">\r\n                            <mat-form-field appearance=\"fill\">\r\n                                <mat-label>ID (ת.ז.)</mat-label>\r\n                                <input matInput type=\"text\" name=\"id\" formControlName=\"_id\" autocomplete=\"off\" required pattern=\"^\\d{9}$\">\r\n                                <mat-error>Please type 9 decimal digits.</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"fill\">\r\n                                <mat-label>E-Mail</mat-label>\r\n                                <input matInput type=\"email\" name=\"email\" formControlName=\"email\" autocomplete=\"email\" required>\r\n                                <mat-error>Please type a valid email.</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"fill\">\r\n                                <mat-label>Password</mat-label>\r\n                                <input matInput type=\"password\" name=\"password\" formControlName=\"password\" autocomplete=\"new-password\" required pattern=\"^[^\\s]+$\">\r\n                                <mat-error>Please type a password.</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"fill\">\r\n                                <mat-label>Repeat Password</mat-label>\r\n                                <input matInput type=\"password\" name=\"passwordRepeat\" formControlName=\"passwordRepeat\" autocomplete=\"off\" required>\r\n                                <mat-error>The passwords don't match.</mat-error>\r\n                            </mat-form-field>\r\n                            <div class=\"stepper-buttons\">\r\n                                <button type=\"button\" mat-button matStepperNext>Next</button>\r\n                            </div>\r\n                        </div>\r\n                    </mat-step>\r\n                    <mat-step label=\"Step 2\">\r\n                        <div class=\"field-group\">\r\n                            <mat-form-field appearance=\"fill\">\r\n                                <mat-label>City</mat-label>\r\n                                <input matInput [matAutocomplete]=\"auto\" type=\"text\" name=\"city\" formControlName=\"city\" required>\r\n                                <mat-error>Please type your city.</mat-error>\r\n                                <mat-autocomplete #auto=\"matAutocomplete\">\r\n                                    <mat-option *ngFor=\"let city of cities\" [value]=\"city\">{{city}}</mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"fill\">\r\n                                <mat-label>Street Address</mat-label>\r\n                                <input matInput type=\"text\" name=\"streetAddress\" autocomplete=\"street-address\" formControlName=\"streetAddress\" required pattern=\"^(\\d+\\s+\\w+)|(\\w+\\s+\\d+)$\">\r\n                                <mat-error>Please type a valid street address, including the house number.</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"fill\">\r\n                                <mat-label>First Name</mat-label>\r\n                                <input matInput type=\"text\" name=\"firstName\" autocomplete=\"given-name\" formControlName=\"firstName\" required>\r\n                                <mat-error>Please type your first (given) name.</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field appearance=\"fill\">\r\n                                <mat-label>Last Name</mat-label>\r\n                                <input matInput type=\"text\" name=\"lastName\" autocomplete=\"family-name\" formControlName=\"lastName\" required>\r\n                                <mat-error>Please type your last (family) name.</mat-error>\r\n                            </mat-form-field>\r\n                            <div class=\"stepper-buttons\">\r\n                                <button type=\"button\" mat-button matStepperPrevious>Back</button>\r\n                            </div>\r\n                        </div>\r\n                    </mat-step>\r\n                </mat-horizontal-stepper>\r\n                <button mat-flat-button color=\"primary\" type=\"submit\" [disabled]=\"!form.valid\">Sign Up</button>\r\n            </mat-card-content>\r\n        </form>\r\n        <div class=\"text-center\">\r\n            <a routerLink=\"../signin\">Already have an account? Log in!</a>\r\n        </div>\r\n    </mat-card>\r\n</div>","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CitiesService {\r\n\r\n  public readonly cities = [\r\n    'Jerusalem',\r\n    'Tel Aviv',\r\n    'Haifa',\r\n    'Rishon LeZion',\r\n    'Petah Tikva',\r\n    'Ashdod',\r\n    'Netanya',\r\n    'Beer Sheva',\r\n    'Bnei Brak',\r\n    'Holon',\r\n  ];\r\n\r\n  constructor() { }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { SignInPage } from './sign-in-page/sign-in.page';\r\nimport { SignUpPage } from './sign-up-page/sign-up.page';\r\nimport { WelcomePage } from './welcome/welcome.page';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WelcomePage,\r\n    SignInPage,\r\n    SignUpPage,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatStepperModule,\r\n    AuthRoutingModule,\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): boolean | UrlTree {\r\n    return this.authService.getLoggedInUser()?.role === 'admin' || this.router.parseUrl('/');\r\n  }\r\n\r\n}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AdminModule } from './admin/admin.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { CustomerModule } from './customer/customer.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatSnackBarModule,\r\n    MatToolbarModule,\r\n    AuthModule,\r\n    AdminModule,\r\n    CustomerModule,\r\n    AppRoutingModule,\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { IProduct } from './product.interface';\r\n\r\nexport class OrderItem {\r\n    constructor(\r\n        public product: IProduct,\r\n        public quantity: number,\r\n        public purchasePrice: number,\r\n    ) { }\r\n}\r\n","import { Component, Input, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { OrderItem } from 'src/app/types/order-item';\r\n\r\nconst Q = 'q';\r\n\r\n@Component({\r\n  selector: 'kwik-e-mart-order-summary',\r\n  templateUrl: './order-summary.component.html',\r\n  styleUrls: ['./order-summary.component.css'],\r\n})\r\nexport class OrderSummaryComponent {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<OrderItem>;\r\n  @Input() dataSource!: OrderItem[];\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  public readonly displayedColumns = ['name', 'quantity', 'price', 'total'];\r\n\r\n  /**\r\n   * An {@link Observable<Array<string>>} containing the IDs of all the products whose names contain the search string.\r\n   */\r\n  public readonly matchingItemIds$ = this.route.queryParamMap.pipe(\r\n    map((queryParamMap) => {\r\n      const q = queryParamMap.get(Q)?.toLowerCase() || '';\r\n      return this.dataSource\r\n        .filter(({ product: { name } }) => queryParamMap.has(Q) && name.toLowerCase().includes(q))\r\n        .map(({ product: { _id } }) => _id);\r\n    })\r\n  );\r\n\r\n  public constructor(\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  public doesMatchRx(productId: string): Observable<boolean> {\r\n    return this.matchingItemIds$.pipe(map((ids) => ids.includes(productId)));\r\n  }\r\n\r\n  public totalQuantity(): number {\r\n    return this.dataSource.reduce((sum, { quantity }) => sum + quantity, 0);\r\n  }\r\n\r\n  public totalPrice(): number {\r\n    return this.dataSource.reduce(\r\n      (sum, { quantity, purchasePrice }) => sum + quantity * purchasePrice,\r\n      0\r\n    );\r\n  }\r\n}\r\n","<table mat-table matSort [dataSource]=\"dataSource\">\r\n\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\r\n        <td mat-cell *matCellDef=\"let item\">{{item.product._id}}</td>\r\n        <th mat-footer-cell *matFooterCellDef>ID</th>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Product</th>\r\n        <td mat-cell *matCellDef=\"let item\">{{item.product.name}}</td>\r\n        <th mat-footer-cell *matFooterCellDef>Total</th>\r\n    </ng-container>\r\n\r\n    <!-- Quantity Column -->\r\n    <ng-container matColumnDef=\"quantity\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Quantity</th>\r\n        <td mat-cell *matCellDef=\"let item\">{{item.quantity}}</td>\r\n        <th mat-footer-cell *matFooterCellDef>{{totalQuantity()}}</th>\r\n    </ng-container>\r\n\r\n    <!-- Price Column -->\r\n    <ng-container matColumnDef=\"price\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Price</th>\r\n        <td mat-cell *matCellDef=\"let item\">{{item.product.price | currency}}</td>\r\n        <th mat-footer-cell *matFooterCellDef></th>\r\n    </ng-container>\r\n\r\n    <!-- Total Column -->\r\n    <ng-container matColumnDef=\"total\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Total</th>\r\n        <td mat-cell *matCellDef=\"let item\">{{item.quantity * item.product.price | currency}}</td>\r\n        <th mat-footer-cell *matFooterCellDef>{{totalPrice() | currency}}</th>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let item; columns: displayedColumns;\" [class.match]=\"doesMatchRx(item.product._id) | async\"></tr>\r\n    <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\r\n\r\n</table>","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { ICartItemsMap } from '../types/cart-items-map.interface';\r\nimport { OrderItem } from '../types/order-item';\r\nimport { IProduct } from '../types/product.interface';\r\n\r\nconst CARTITEMS = 'cartItems';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n  public readonly change = new EventEmitter();\r\n\r\n  constructor() {\r\n    this.validateStoredCart();\r\n  }\r\n\r\n  getItem(productId: string): OrderItem | null {\r\n    const map = this.getCartItemsMap();\r\n    return map[productId] || null;\r\n  }\r\n\r\n  getAllItems(): Array<OrderItem> {\r\n    return Object.values(this.getCartItemsMap());\r\n  }\r\n\r\n  getTotalQuantity(): number {\r\n    return this.getTotal(item => item.quantity);\r\n  }\r\n\r\n  getTotalPrice(): number {\r\n    return this.getTotal(item => item.quantity * item.purchasePrice);\r\n  }\r\n\r\n  setItem(product: IProduct, quantity: number): void {\r\n    const map = this.getCartItemsMap();\r\n    if (quantity > 0) {\r\n      map[product._id] = new OrderItem(product, quantity, product.price);\r\n    }\r\n    else {\r\n      delete map[product._id];\r\n    }\r\n    this.setCartItemsMap(map);\r\n  }\r\n\r\n  empty(): void {\r\n    this.setCartItemsMap({});\r\n  }\r\n\r\n  isEmpty(): boolean {\r\n    return this.getTotal(item => 1) === 0;\r\n  }\r\n\r\n  private getTotal(selectTerm: (item: OrderItem) => number): number {\r\n    return Object.values(this.getCartItemsMap())\r\n      .map(selectTerm)\r\n      .reduce((total, term) => total + term, 0);\r\n  }\r\n\r\n  private getCartItemsMap(): ICartItemsMap {\r\n    return JSON.parse(localStorage.getItem(CARTITEMS) || '{}');\r\n  }\r\n\r\n  private setCartItemsMap(map: ICartItemsMap): void {\r\n    localStorage.setItem(CARTITEMS, JSON.stringify(map));\r\n    this.change.emit();\r\n  }\r\n\r\n  /**\r\n   * Validate localStorage.cartItems; delete it if it doesn't conform to the expected structure.\r\n   */\r\n  private validateStoredCart(): void {\r\n    const mapJson = localStorage.getItem(CARTITEMS);\r\n    // tslint:disable-next-line: label-position\r\n    test: {\r\n      if (typeof mapJson === 'string') {\r\n        const map = JSON.parse(mapJson);\r\n        if (map && typeof map === 'object' && Object.getPrototypeOf(map) === Object.prototype) {\r\n          const items: Array<OrderItem> = Object.values(map);\r\n          try {\r\n            if (items.some(({ product: { _id, name, price, imageUrl }, quantity }) => (\r\n              typeof _id !== 'string' ||\r\n              typeof name !== 'string' ||\r\n              typeof price !== 'number' ||\r\n              typeof imageUrl !== 'string' ||\r\n              typeof quantity !== 'number'\r\n            ))) {\r\n              break test;\r\n            }\r\n          }\r\n          catch (err) {\r\n            break test;\r\n          }\r\n        }\r\n        else {\r\n          break test;\r\n        }\r\n      }\r\n      return;\r\n    }\r\n    if (mapJson) {\r\n      localStorage.removeItem(CARTITEMS);\r\n    }\r\n  }\r\n\r\n}\r\n","import { LayoutModule } from '@angular/cdk/layout';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatMomentDateModule, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { RootPage } from './0_root/root.page';\r\nimport { CatalogPage } from './1_catalog/catalog.page';\r\nimport { CheckoutPage } from './2_checkout/checkout.page';\r\nimport { ThankYouPage } from './3_thank-you/thank-you.page';\r\nimport { CustomerRoutingModule } from './customer-routing.module';\r\nimport { OrderSummaryComponent } from './order-summary/order-summary.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    LayoutModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDatepickerModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatMomentDateModule,\r\n    MatSidenavModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    CustomerRoutingModule,\r\n  ],\r\n  providers: [\r\n    { provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: { useUtc: true } }\r\n  ],\r\n  declarations: [\r\n    RootPage,\r\n    CatalogPage,\r\n    CheckoutPage,\r\n    ThankYouPage,\r\n    OrderSummaryComponent,\r\n  ],\r\n})\r\nexport class CustomerModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { mapTo, switchMap } from 'rxjs/operators';\r\nimport { IObjectUrls } from 'src/app/types/object-urls.interface';\r\nimport { AlertService, httpAlert } from './alert.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GsService {\r\n\r\n    constructor(private http: HttpClient, private alertService: AlertService) { }\r\n\r\n    uploadRx(file: File): Observable<string> {\r\n        return this.http.post<IObjectUrls>('/api/gs', { path: 'products/', type: file.type }).pipe(\r\n            switchMap(({ getUrl, putUrl }) => this.http.put(putUrl, file).pipe(mapTo(getUrl))),\r\n            httpAlert(this.alertService),\r\n        );\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { RootPage } from './0_root/root.page';\r\nimport { InventoryPage } from './1_inventory/inventory.page';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatBadgeModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MaterialFileInputModule,\r\n    AdminRoutingModule,\r\n  ],\r\n  declarations: [\r\n    RootPage,\r\n    InventoryPage,\r\n  ],\r\n})\r\nexport class AdminModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RootPage } from './0_root/root.page';\r\nimport { CatalogPage } from './1_catalog/catalog.page';\r\nimport { CheckoutPage } from './2_checkout/checkout.page';\r\nimport { ThankYouPage } from './3_thank-you/thank-you.page';\r\nimport { RoleGuard } from './role.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'customer',\r\n    component: RootPage,\r\n    canActivate: [RoleGuard],\r\n    children: [\r\n      {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: 'catalog/all',\r\n      },\r\n      { path: 'catalog/:categoryId', component: CatalogPage },\r\n      { path: 'checkout', component: CheckoutPage },\r\n      { path: 'thankyou', component: ThankYouPage },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CustomerRoutingModule { }\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { IOrder } from '../types/order.interface';\r\nimport { AlertService, httpAlert } from './alert.service';\r\n\r\nconst LASTORDER = 'lastOrder';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n\r\n  public constructor(private http: HttpClient, private alertService: AlertService) { }\r\n\r\n  public placeOrderRx(fields: { [key: string]: string }): Observable<IOrder> {\r\n    return this.http\r\n      .post<IOrder>('/api/order', new HttpParams({ fromObject: fields }))\r\n      .pipe(tap(order => this.setLastOrder(order)), httpAlert(this.alertService));\r\n  }\r\n\r\n  public getAllOrdersRx(): Observable<Array<IOrder>> {\r\n    return this.http.get<Array<IOrder>>('/api/order/all').pipe(httpAlert(this.alertService));\r\n  }\r\n\r\n  public getLastOrder(): IOrder {\r\n    return JSON.parse(localStorage.getItem(LASTORDER) || 'null');\r\n  }\r\n\r\n  private setLastOrder(order: IOrder): void {\r\n    localStorage.setItem(LASTORDER, JSON.stringify(order));\r\n  }\r\n}\r\n","import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { IUser } from '../types/user.interface';\r\nimport { AlertService, httpAlert } from './alert.service';\r\n\r\nconst USERLSKEY = 'user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  public readonly loggedInUserChange$ = new EventEmitter<IUser | null>();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private alertService: AlertService,\r\n  ) {\r\n    // tslint:disable-next-line: deprecation\r\n    this.http.get<IUser>('/api/auth').subscribe({\r\n      next: this.setLoggedInUser.bind(this),\r\n      error: (error: HttpErrorResponse) => {\r\n        if (error.status === 404) {\r\n          this.setLoggedInUser(null);\r\n        } else {\r\n          this.alertService.postAlert(`${error.status} ${error.statusText}`);\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  public getLoggedInUser(): IUser | null {\r\n    const userJson = localStorage.getItem(USERLSKEY);\r\n    return userJson && JSON.parse(userJson);\r\n  }\r\n\r\n  private setLoggedInUser(user: IUser | null): void {\r\n    const prevUser = this.getLoggedInUser();\r\n    if (user) {\r\n      localStorage.setItem(USERLSKEY, JSON.stringify(user));\r\n    }\r\n    else {\r\n      localStorage.removeItem(USERLSKEY);\r\n    }\r\n    if (user?._id !== prevUser?._id) {\r\n      this.loggedInUserChange$.emit(user);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log in.\r\n   * @param email E-Mail\r\n   * @param password Password\r\n   */\r\n  public logInRx(email: string, password: string): Observable<IUser | null> {\r\n    return this.http.put<IUser>('/api/auth', new HttpParams({ fromObject: { email, password } })).pipe(\r\n      httpAlert(this.alertService),\r\n      tap(this.setLoggedInUser.bind(this)),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Log out.\r\n   */\r\n  public logOutRx(): Observable<void> {\r\n    this.setLoggedInUser(null);\r\n    return this.http.delete<void>('/api/auth');\r\n  }\r\n\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'kwik-e-mart-sign-in',\r\n  templateUrl: './sign-in.page.html',\r\n  styleUrls: ['./sign-in.page.css']\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class SignInPage implements OnInit {\r\n\r\n  email = '';\r\n  password = '';\r\n\r\n  constructor(\r\n    private alertService: AlertService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.authService.logInRx(this.email, this.password)\r\n      .pipe(catchError((error: HttpErrorResponse) => {\r\n        this.alertService.postAlert(error.statusText);\r\n        if (error.error instanceof ErrorEvent) {\r\n          // A client-side or network error occurred. Handle it accordingly.\r\n          console.error('An error occurred:', error.error.message);\r\n        } else {\r\n          // The backend returned an unsuccessful response code.\r\n          // The response body may contain clues as to what went wrong.\r\n          console.error(\r\n            `Backend returned code ${error.status}, ` +\r\n            `body was: ${error.error}`);\r\n        }\r\n        return throwError('Danger');\r\n      }))\r\n      // tslint:disable-next-line: deprecation\r\n      .subscribe(async () => await this.router.navigateByUrl('/'));\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <mat-card>\r\n        <form #f=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n            <mat-card-header>\r\n                <mat-card-title>Welcome to Kwik-E-Mart!</mat-card-title>\r\n                <mat-card-subtitle>Please sign in.</mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-form-field appearance=\"fill\">\r\n                    <mat-label>E-Mail</mat-label>\r\n                    <input matInput type=\"email\" name=\"email\" autocomplete=\"email\" required [(ngModel)]=\"email\">\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"fill\">\r\n                    <mat-label>Password</mat-label>\r\n                    <input matInput type=\"password\" name=\"password\" autocomplete=\"current-password\" required [(ngModel)]=\"password\">\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n            <mat-card-actions>\r\n                <button mat-flat-button color=\"primary\" type=\"submit\" [disabled]=\"f.invalid\">Sign In</button>\r\n            </mat-card-actions>\r\n        </form>\r\n        <div class=\"text-center\">\r\n            <a routerLink=\"../signup\">Don't have an account? Sign up!</a>\r\n        </div>\r\n    </mat-card>\r\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IUser } from '../types/user.interface';\r\nimport { AlertService, httpAlert } from './alert.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private alertService: AlertService,\r\n  ) { }\r\n\r\n  createRx(user: { _id: string }): Observable<IUser> {\r\n    return this.http.put<IUser>(`/api/user/${user._id}`, new HttpParams({ fromObject: user }))\r\n      .pipe(httpAlert(this.alertService));\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { combineLatest } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { IProduct } from 'src/app/types/product.interface';\r\n\r\nconst CATEGORYID = 'categoryId';\r\nconst Q = 'q';\r\n\r\n@Component({\r\n  templateUrl: './catalog.page.html',\r\n  styleUrls: ['./catalog.page.css'],\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class CatalogPage implements OnInit {\r\n\r\n  public readonly allCategories$ = this.productService.getAllCategoriesRx();\r\n\r\n  public readonly allProductsInCategory$ = combineLatest([this.route.paramMap, this.route.queryParamMap]).pipe(\r\n    switchMap(([paramMap, queryParamMap]) => this.productService.getAllProductsInCategoryRx(\r\n      paramMap.get(CATEGORYID) || 'all',\r\n      queryParamMap.get(Q) || undefined,\r\n    )),\r\n  );\r\n\r\n  public constructor(\r\n    private productService: ProductService,\r\n    private cartService: CartService,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  public ngOnInit(): void { }\r\n\r\n  public addCartItem(product: IProduct, delta: number = 1): void {\r\n    const quantity = this.cartService.getItem(product._id)?.quantity || 0;\r\n    this.cartService.setItem(product, quantity + delta);\r\n  }\r\n\r\n  public getCategoryId(): string {\r\n    return this.route.snapshot.paramMap.get('categoryId') || '';\r\n  }\r\n\r\n}\r\n","<nav mat-tab-nav-bar>\r\n    <a mat-tab-link *ngFor=\"let category of allCategories$ | async\" [routerLink]=\"['..', category._id]\" queryParamsHandling=\"preserve\"\r\n        [active]=\"getCategoryId() === category._id\">{{category.name}}</a>\r\n</nav>\r\n\r\n<div class=\"container\">\r\n    <mat-card class=\"item\" *ngFor=\"let product of allProductsInCategory$ | async\">\r\n        <img mat-card-image [src]=\"product.imageUrl\" [alt]=\"product.name\">\r\n        <mat-card-header>\r\n            <mat-card-title>{{product.name}}</mat-card-title>\r\n            <mat-card-subtitle>{{product.price | currency}}</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <div class=\"spacer\"></div>\r\n        <mat-card-actions>\r\n            <button mat-icon-button color=\"primary\" (click)=\"addCartItem(product)\">\r\n                <mat-icon>add_shopping_cart</mat-icon>\r\n            </button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthorizationGuard } from './authorization.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    canActivate: [AuthorizationGuard],\r\n    children: [],\r\n  },\r\n  { path: '**', redirectTo: '/' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(\r\n    routes,\r\n    { enableTracing: false }, // <-- debugging purposes only\r\n  )],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FileInputComponent } from 'ngx-material-file-input';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { GsService } from 'src/app/services/gs.service';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { IProduct } from 'src/app/types/product.interface';\r\nimport { InventoryPage } from '../1_inventory/inventory.page';\r\n\r\n@Component({\r\n  templateUrl: './root.page.html',\r\n  styleUrls: ['./root.page.css']\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class RootPage implements OnInit {\r\n\r\n  private inventoryPage: InventoryPage | undefined;\r\n\r\n  public editedProduct: IProduct | null = null;\r\n\r\n  public constructor(\r\n    public authService: AuthService,\r\n    public productService: ProductService,\r\n    private route: ActivatedRoute,\r\n    private gs: GsService,\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n  }\r\n\r\n  public onActivate(page: Component): void {\r\n    if (page instanceof InventoryPage) {\r\n      this.inventoryPage = page;\r\n      this.inventoryPage.edit.subscribe((product: IProduct) => this.onEdit(product));\r\n    }\r\n    else {\r\n      throw new Error(`Expected argument to be of type InventoryPage but got ${page}.`);\r\n    }\r\n  }\r\n\r\n  public onEdit(product: IProduct): void {\r\n    this.editedProduct = product;\r\n  }\r\n\r\n  public upload(image: FileInputComponent): void {\r\n    const file = image.value?.files[0];\r\n    if (file) {\r\n      this.gs.uploadRx(file).subscribe(url => this.editedProduct && (this.editedProduct.imageUrl = url));\r\n    }\r\n  }\r\n\r\n  public save({ value: product }: NgForm): void {\r\n    product.categoryId ||= this.route.snapshot.paramMap.get('categoryId');\r\n    // tslint:disable-next-line: deprecation\r\n    this.productService.saveProductRx(product).subscribe(() => this.inventoryPage?.touch());\r\n  }\r\n\r\n  public logOut(): void {\r\n    // tslint:disable-next-line: deprecation\r\n    this.authService.logOutRx().subscribe();\r\n  }\r\n\r\n}\r\n","<!-- Main Toolbar -->\r\n<mat-toolbar color=\"primary\">\r\n\r\n    <mat-toolbar-row>\r\n\r\n        <!-- Website Title -->\r\n        <span class=\"cursor-pointer\">Kwik-E-Mart (Admin)</span>\r\n\r\n        <span class=\"flex-fill\"></span>\r\n\r\n        <!-- Logged-In User + Logout Button -->\r\n        <ng-container *ngIf=\"authService.getLoggedInUser() as user\">\r\n            <button mat-button [matMenuTriggerFor]=\"userMenu\">Hello, {{user.name.first}}!</button>\r\n            <mat-menu #userMenu=\"matMenu\">\r\n                <button mat-menu-item (click)=\"logOut()\">\r\n                    <mat-icon>logout</mat-icon>Log Out\r\n                </button>\r\n            </mat-menu>\r\n        </ng-container>\r\n\r\n    </mat-toolbar-row>\r\n\r\n</mat-toolbar>\r\n\r\n<mat-sidenav-container>\r\n\r\n    <!-- Product Details Sidenav -->\r\n    <mat-sidenav mode=\"push\" position=\"start\" fixedInViewport #sidenav [opened]=\"!!editedProduct\" (closed)=\"editedProduct = null\">\r\n\r\n        <button mat-icon-button type=\"button\" (click)=\"sidenav.close()\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n\r\n        <mat-card>\r\n            <img mat-card-image [src]=\"editedProduct?.imageUrl\" [alt]=\"editedProduct?.name\">\r\n            <mat-card-header>\r\n                <mat-card-title>{{editedProduct?.name || 'New Product'}}</mat-card-title>\r\n                <mat-card-subtitle>{{editedProduct?.price | currency}}</mat-card-subtitle>\r\n            </mat-card-header>\r\n            <form method=\"post\" action=\"/api/category/{{editedProduct?.categoryId}}/product\" #product=\"ngForm\" (ngSubmit)=\"save(product); sidenav.close()\">\r\n                <input type=\"hidden\" name=\"_id\" [ngModel]=\"editedProduct?._id\">\r\n                <input type=\"hidden\" name=\"categoryId\" [ngModel]=\"editedProduct?.categoryId\">\r\n                <input type=\"hidden\" name=\"imageUrl\" [ngModel]=\"editedProduct?.imageUrl\">\r\n                <mat-card-content>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Image File</mat-label>\r\n                        <ngx-mat-file-input accept=\"image/*\" #image (change)=\"upload(image)\"></ngx-mat-file-input>\r\n                        <mat-icon matSuffix>image</mat-icon>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Name</mat-label>\r\n                        <input matInput type=\"text\" name=\"name\" [ngModel]=\"editedProduct?.name\" required>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Price</mat-label>\r\n                        <input matInput type=\"number\" min=\"0\" name=\"price\" [ngModel]=\"editedProduct?.price\">\r\n                    </mat-form-field>\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-flat-button color=\"basic\" type=\"reset\" (click)=\"sidenav.close()\">Cancel</button>\r\n                    <button mat-flat-button color=\"primary\" type=\"submit\" [disabled]=\"product.invalid\">Save</button>\r\n                </mat-card-actions>\r\n            </form>\r\n        </mat-card>\r\n\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n\r\n        <router-outlet (activate)=\"onActivate($event)\"></router-outlet>\r\n\r\n    </mat-sidenav-content>\r\n\r\n</mat-sidenav-container>","import {\r\n  BreakpointObserver\r\n} from '@angular/cdk/layout';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { OrderItem } from 'src/app/types/order-item';\r\n\r\n@Component({\r\n  selector: 'kwik-e-mart-customer',\r\n  templateUrl: './root.page.html',\r\n  styleUrls: ['./root.page.css'],\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class RootPage implements OnInit {\r\n  public readonly title = 'Kwik-E-Mart';\r\n\r\n  @ViewChild('sidenav', { static: true }) sidenav!: MatSidenav;\r\n\r\n  public constructor(\r\n    public authService: AuthService,\r\n    public cartService: CartService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private breakpointObserver: BreakpointObserver\r\n  ) {\r\n    this.cartService.change.subscribe(\r\n      () => this.breakpointObserver.isMatched('(min-width: 600px)') && !this.cartService.isEmpty() && this.sidenav.open()\r\n    );\r\n  }\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public setFilter(event: Event): void {\r\n    const { value } = event.target as HTMLInputElement;\r\n    this.router.navigate([], { queryParams: value ? { q: value } : {} });\r\n  }\r\n\r\n  public emptyCart(): void {\r\n    if (confirm('Remove all items from the cart?')) {\r\n      this.cartService.empty();\r\n    }\r\n  }\r\n\r\n  public goToCheckOutAsync(): Promise<boolean> {\r\n    return this.router.navigate(['checkout'], { relativeTo: this.route, queryParamsHandling: 'preserve' });\r\n  }\r\n\r\n  public logOut(): void {\r\n    // tslint:disable-next-line: deprecation\r\n    this.authService.logOutRx().subscribe();\r\n  }\r\n\r\n  public productIdOfCartItem(index: number, item: OrderItem): string {\r\n    return item.product._id;\r\n  }\r\n}\r\n","<!-- Main Toolbar -->\r\n<mat-toolbar color=\"primary\">\r\n\r\n    <!-- Website Title -->\r\n    <!-- <img class=\"cursor-pointer\" src=\"https://storage.googleapis.com/kwik-e-mart/assets/logo.png\" [alt]=\"title\" width=\"64px\"> -->\r\n\r\n    <!-- Search Box -->\r\n    <mat-form-field>\r\n        <mat-label>Search</mat-label>\r\n        <input matInput (input)=\"setFilter($event)\">\r\n    </mat-form-field>\r\n\r\n    <span class=\"flex-fill\"></span>\r\n\r\n    <!-- Shopping Cart Button -->\r\n    <button type=\"button\" mat-icon-button [matBadge]=\"cartService.getTotalQuantity()\" [matBadgeHidden]=\"cartService.isEmpty()\" matBadgeColor=\"warn\"\r\n        (click)=\"sidenav.toggle()\">\r\n        <mat-icon>shopping_cart</mat-icon>\r\n    </button>\r\n\r\n    <!-- Logged-In User + Logout Button -->\r\n    <ng-container *ngIf=\"authService.getLoggedInUser() as user\">\r\n        <button mat-button [matMenuTriggerFor]=\"userMenu\">Hello, {{user.name.first}}!</button>\r\n        <mat-menu #userMenu=\"matMenu\">\r\n            <button mat-menu-item (click)=\"logOut()\">\r\n                <mat-icon>logout</mat-icon>Log Out\r\n            </button>\r\n        </mat-menu>\r\n    </ng-container>\r\n\r\n</mat-toolbar>\r\n\r\n<mat-sidenav-container>\r\n\r\n    <!-- Shopping Cart Sidenav -->\r\n    <mat-sidenav mode=\"push\" position=\"start\" fixedInViewport #sidenav>\r\n\r\n        <button class=\"cart-close-button\" mat-icon-button type=\"button\" (click)=\"sidenav.close()\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n\r\n        <mat-divider class=\"cart-divider\"></mat-divider>\r\n\r\n        <h2 *ngIf=\"cartService.isEmpty()\">The cart is empty.</h2>\r\n\r\n        <form (ngSubmit)=\"sidenav.close(); goToCheckOutAsync()\">\r\n            <ng-container *ngIf=\"!cartService.isEmpty()\">\r\n                <div class=\"cart-item\" *ngFor=\"let item of cartService.getAllItems(); trackBy: productIdOfCartItem\">\r\n                    <mat-form-field class=\"quantity-field\" appearance=\"outline\">\r\n                        <mat-label>Quantity</mat-label>\r\n                        <input matInput type=\"number\" [name]=\"item.product._id\" [value]=\"item.quantity\" min=\"1\" #quantity\r\n                            (input)=\"cartService.setItem(item.product, +quantity.value)\">\r\n                    </mat-form-field>\r\n                    <mat-card-header class=\"summary\">\r\n                        <mat-card-title>{{item.product.name}}</mat-card-title>\r\n                        <mat-card-subtitle>{{item.product.price | currency}}</mat-card-subtitle>\r\n                        <img mat-card-avatar [src]=\"item.product.imageUrl\" [alt]=\"item.product.name\">\r\n                    </mat-card-header>\r\n                    <div class=\"flex-fill\"></div>\r\n                    <div class=\"remove-from-cart-button-wrapper\">\r\n                        <button class=\"remove-from-cart-button\" mat-icon-button color=\"warn\" type=\"button\" (click)=\"cartService.setItem(item.product, 0)\">\r\n                            <mat-icon>remove_shopping_cart</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n            <mat-divider class=\"cart-divider\"></mat-divider>\r\n            <h2 class=\"cart-total\">Cart Total: {{cartService.getTotalPrice() | currency}}</h2>\r\n            <div class=\"cart-actions\">\r\n                <button mat-flat-button type=\"submit\" color=\"primary\" [disabled]=\"cartService.isEmpty()\">\r\n                    <mat-icon>point_of_sale</mat-icon>\r\n                </button>\r\n                <button mat-flat-button type=\"reset\" color=\"warn\" [disabled]=\"cartService.isEmpty()\" (click)=\"emptyCart()\">\r\n                    <mat-icon>remove_shopping_cart</mat-icon>\r\n                </button>\r\n            </div>\r\n        </form>\r\n\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n\r\n        <router-outlet></router-outlet>\r\n\r\n    </mat-sidenav-content>\r\n\r\n</mat-sidenav-container>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}